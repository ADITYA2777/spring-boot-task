pipeline {
    agent any
    
    environment {
        DOCKER_HUB_CREDENTIALS = 'DockerHub'
        NODE_IMAGE_NAME = 'adityajain0127/react-frontend'
        BACKEND_IMAGE_NAME = 'adityajain0127/springboot-backend'
        DOCKER_IMAGE_TAG = 'latest'
        DOCKER_COMPOSE_FILE_PATH = './ReactJS-Spring-Boot-CRUD-Full-Stack-App-master/docker-compose.yml'
    }
    
    stages {
        stage('Code Checkout') {
            steps {
                git url: 'https://github.com/ADITYA2777/spring-boot-task.git', branch: 'main' 
            }
        }
        
        stage("Build and Test frontend") {
            steps {
                script {
                    // Navigate to the frontend directory and build the Docker image
                    dir("./ReactJS-Spring-Boot-CRUD-Full-Stack-App-master/react-frontend") {
                        sh "docker build -t ${NODE_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ."
                    }
                    echo 'Frontend build successful'
                }
            }
        }
        
        stage("Build and Test backend") {
            steps {
                script {
                    // Navigate to the backend directory and build the Docker image
                    dir("./ReactJS-Spring-Boot-CRUD-Full-Stack-App-master/springboot-backend") {
                        sh "docker build -t ${BACKEND_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ."
                    }
                    echo 'Backend build successful'
                }
            }
        }
        
        stage("Push to DockerHub") {
            steps {
                script {
                    // Login to DockerHub and push the built images
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, passwordVariable: 'DOCKER_HUB_PASSWORD', usernameVariable: 'DOCKER_HUB_USERNAME')]) {
                        sh "docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}"
                        sh "docker push ${NODE_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                        sh "docker push ${BACKEND_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                        echo 'Image push successful'
                    }
                }
            }
        }
        
        stage('Application Deployment') {
            steps {
                script {
                    // Deploy the application using Docker Compose
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE_PATH} down"
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE_PATH} up -d"
                    echo 'Deployment successful'
                }
            }
        }
    }
}
